name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:

    runs-on: ubuntu-latest

    services:
      postgresql-db:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: test
          POSTGRES_DB: usersDb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Build Docker image
      run: docker build -t my-spring-boot-app .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Push Docker image
      run: |
        docker tag my-spring-boot-app:latest ${{ secrets.DOCKER_HUB_USERNAME }}/my-spring-boot-app:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my-spring-boot-app:latest

    - name: Deploy and Test
      run: |
        docker run -d -p 8080:8090 --name spring-boot-app ${{ secrets.DOCKER_HUB_USERNAME }}/my-spring-boot-app:latest
        sleep 30 # Wait for the app to start
        curl -f http://localhost:8080/actuator/health

    - name: Cleanup
      run: docker rm -f spring-boot-app || true
